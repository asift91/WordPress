{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "wpCommon": {
            "metadata": {
                "description": "Common WordPress values"
            },
            "type": "object"
        },
        "vnetName": {
            "metadata": {
                "description": "The name of the vnet where subnets should be created"
            },
            "type": "string"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2017-10-01",
            "name": "[concat(parameters('vnetName'), '/', parameters('wpCommon').subnetWeb)]",
            "location": "[parameters('wpCommon').location]",
            "properties": {
                "addressPrefix": "[parameters('wpCommon').subnetWebRange]"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2017-10-01",
            "name": "[concat(parameters('vnetName'), '/', parameters('wpCommon').subnetSan)]",
            "location": "[parameters('wpCommon').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('wpCommon').subnetWeb)]"
            ],
            "properties": {
                "addressPrefix": "[parameters('wpCommon').subnetSanRange]"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2017-10-01",
            "name": "[concat(parameters('vnetName'), '/', parameters('wpCommon').subnetRedis)]",
            "location": "[parameters('wpCommon').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('wpCommon').subnetSan)]"
            ],
            "properties": {
                "addressPrefix": "[parameters('wpCommon').subnetRedisRange]"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2017-10-01",
            "name": "[concat(parameters('vnetName'), '/', parameters('wpCommon').subnetElastic)]",
            "location": "[parameters('wpCommon').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('wpCommon').subnetRedis)]"
            ],
            "properties": {
                "addressPrefix": "[parameters('wpCommon').subnetElasticRange]"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2017-10-01",
            "name": "[concat(parameters('vnetName'), '/', parameters('wpCommon').subnetTika)]",
            "location": "[parameters('wpCommon').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('wpCommon').subnetElastic)]"
            ],
            "properties": {
                "addressPrefix": "[parameters('wpCommon').subnetTikaRange]"
            }
        },
        {
            "condition": "[parameters('wpCommon').vnetGwDeploySwitch]",
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2017-10-01",
            "name": "[concat(parameters('vnetName'), '/', parameters('wpCommon').subnetGateway)]",
            "location": "[parameters('wpCommon').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('wpCommon').subnetTika)]"
            ],
            "properties": {
                "addressPrefix": "[parameters('wpCommon').subnetGatewayRange]"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2017-10-01",
            "name": "[concat(parameters('vnetName'), '/', parameters('wpCommon').subnetAppGw)]",
            "location": "[parameters('wpCommon').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('wpCommon').subnetGateway)]"
            ],
            "properties": {
                "addressPrefix": "[parameters('wpCommon').subnetAppGwRange]"
            }
        }
    ],
    "variables": {
        "documentation01": "This sub-template creates various subnets needed for various components of the cluster.",
        "documentation02": "This needs to be done on a separate nested template, in order to allow to create subnets on a customer's BYO-vnet, which may be on a different subscription and/or on a different resource group.",
        "documentation03": "The subnets are created one-by-one (using the dependsOn's), to avoid ARM's 'Another operation on this or dependent resource is in progress' failures"
    }
}
